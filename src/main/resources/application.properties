spring.application.name=batchbackend-stagetwo
server.port=8089


## Database configurations
# Batch Tool DB/BSCS
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.jdbc-url=jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=10.1.111.201)(PORT=1521))(CONNECT_DATA=(SERVER=dedicated)(SERVICE_NAME=BSCSCOPY))) 
spring.datasource.username=SYSADM
spring.datasource.password=SYSADM

# OCM DB
spring.datasource.ocm.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.ocm.url=jdbc:oracle:thin:@(DESCRIPTION= (ADDRESS= (PROTOCOL=TCP) (HOST=10.1.111.67) (PORT=1521)) (CONNECT_DATA= (SERVER=dedicated) (SERVICE_NAME=BSCSCOPY)))
spring.datasource.ocm.username=SYSADM
spring.datasource.ocm.password=SYSADM


#controls whether Spring Batch jobs automatically run on application startup in Spring Boot applications  
spring.batch.job.enabled=false


### Stage Two configurations
# Status config

stagetwo.batchitem.query.initalcount=select count (1) from batch_item where status = '${stagetwo.batchitem.status.inital}' or (status = '${stagetwo.batchitem.status.error}' and retry < ${stagetwo.batchitem.retry.limit})
stagetwo.batchitem.status.inital=VALID
stagetwo.batchitem.status.error=ERROR
stagetwo.batchitem.status.inprogress=INPROGRESS
stagetwo.batchitem.status.failed=FAILED
stagetwo.batchitem.status.success=SUCCESS
stagetwo.batchitem.retry.limit=5

# Reader config
stagetwo.batch.chunksize=100
stagetwo.batch.throttleLimit=20
stagetwo.taskexecutor.corePoolSize=5
stagetwo.taskexecutor.maxPoolSize=20

# Schedular config
stagetwo.job.initial-delay=2000
stagetwo.job.fixed-delay=5000

# OCM related config
ocm.validatedorders.limit=21
#ocm.validatedorders.count.query=SELECT COUNT (*) FROM ocm_co_order@bscs_ocm_link WHERE status_code = 'VALIDATED_BY_CUSTOMER' AND login = 'AMAMA' AND creation_date > (SYSDATE - 2)
ocm.validatedorders.count.query=SELECT COUNT (*) FROM ocm_co_order WHERE status_code = 'VALIDATED_BY_CUSTOMER' AND login = 'AMAMA' AND creation_date > (SYSDATE - 2)


# Lizard related config / Api
lizard.po.server=http://10.4.3.121:9002
lizard.po.url=${lizard.po.server}/productOrder/productordering/v2/productOrder


## TCRM API - Production !
#tcrm.party.server=https://servicesprod.tcrm.jt.jtgroup:8443
#tcrm.party.url=${tcrm.party.server}/OutBoundServices/TCRMCommon.svc/rest/CreateOrganizationParty


## TCRM API related config - Test environment
tcrm.party.server=https://HCIM-TCRM-FE-E:9443
tcrm.party.url=${tcrm.party.server}/TCRMCommon.svc/rest/CreateOrganizationParty 


## BSS API related config
bss.party.server=http://10.4.3.123:8080
bss.party.url=${bss.party.server}/bss-api/api/partyManagement/v1/PartyOrganization


# Logging 
logging.level.root=INFO
#logging.level.com.atos.ojo=TRACE
logging.level.org.springframework.batch.item.database=DEBUG
#spring.jpa.show-sql=true
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#logging.level.org.springframework.jdbc.core=DEBUG


#Rest template config
rest.template.ignore.ssl.check=true
rest.template.read.timeout=30s
rest.template.connect.timeout=30s

